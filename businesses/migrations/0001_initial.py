# Generated by Django 5.1.4 on 2025-02-11 07:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('creators', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=250, unique=True)),
                ('slug', models.CharField(max_length=250, unique=True)),
                ('phone_number', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=250)),
                ('address', models.TextField(max_length=1000)),
                ('description', models.TextField(blank=True, help_text='describe what you do')),
                ('subscription_plan', models.CharField(blank=True, max_length=250)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reffered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_refferal', to=settings.AUTH_USER_MODEL)),
                ('social_media_accounts', models.ManyToManyField(blank=True, to='creators.socialmediaaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge_name', models.CharField(max_length=200)),
                ('video_url', models.URLField(blank=True, help_text='if you have video you want creators to recreate their videos from', null=True)),
                ('description', models.TextField(blank=True)),
                ('budget', models.IntegerField()),
                ('challenge_reward', models.IntegerField(help_text='whats the reward for the challenge')),
                ('target_winners', models.IntegerField(default=3, help_text='how many winners do you want for this challenge')),
                ('last_day_of_the_challenge', models.DateField(auto_now_add=True)),
                ('rules', models.TextField(blank=True)),
                ('closed', models.BooleanField(default=False)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to='businesses.business')),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to='creators.creator')),
                ('winners', models.ManyToManyField(blank=True, related_name='winners', to='creators.creator')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPointForLogginIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateField(auto_now=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='creators.creator')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPointsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('points on purchases made', 'points on purchases made'), ('points on visiting the store', 'points on visiting the store'), ('points on refferal sales', 'points on refferal sales'), ('points on bringing friends to the store', 'points on bringing friends to the store')], max_length=100)),
                ('total_views_for_a_point', models.IntegerField(default=100, help_text=' for purchase made what purchase value equals a point, for visits how many visits eaquals apoint, for refferal sales whats sales value equals a point, and for friends brought to the store how many friends equals a point')),
                ('redemed_at_how_much_per_point', models.FloatField(default=1)),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField()),
                ('total_views', models.IntegerField(default=0)),
                ('points_earned', models.IntegerField(default=0)),
                ('added_by', models.CharField(blank=True, max_length=200, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.challenge')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creators.creator')),
                ('points_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='businesses.loyaltypointscategory')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyRefferalPointsUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateField(auto_now=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='creators.creator')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='businesses.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='challenge',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='businesses.staff'),
        ),
    ]
